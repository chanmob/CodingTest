from collections import Counter

def solution(str1, str2):
    str1 = str1.lower()
    str2 = str2.lower()
    
    A = []
    B = []
    
    for i in range(len(str1) - 1):
        if str1[i].isalpha() and str1[i + 1].isalpha():
            A.append(str1[i] + str1[i + 1])
    
    for i in range(len(str2) - 1):
        if str2[i].isalpha() and str2[i + 1].isalpha():
            B.append(str2[i] + str2[i + 1])

    counterA = Counter(A)
    counterB = Counter(B)

    intersection = counterA & counterB
    intersection_size = sum(intersection.values())

    union = counterA | counterB 
    union_size = sum(union.values())

    jaccard_similarity = intersection_size / union_size if union_size != 0 else 1
    
    return int(jaccard_similarity * 65536)